{"version":3,"sources":["VideoComponent.js","index.js"],"names":["VideoComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","identity","roomName","roomNameErr","previewTracks","localMediaAvailable","hasJoinedRoom","activeRoom","joinRoom","bind","assertThisInitialized","handleRoomNameChange","roomJoined","leaveRoom","detachTracks","detachParticipantTracks","token","setState","e","target","value","trim","console","log","connectOptions","name","tracks","Video","connect","then","error","alert","message","container","forEach","track","appendChild","attach","participant","Array","from","values","attachTracks","detach","detachedElement","remove","room","_this2","previewContainer","refs","localMedia","querySelector","attachParticipantTracks","localParticipant","participants","remoteMedia","on","kind","stop","disconnect","showLocalTrack","react_default","a","createElement","className","ref","joinOrLeaveRoomButton","RaisedButton_default","label","secondary","onClick","primary","Card","TextField_default","hintText","onChange","errorText","undefined","id","Component","injectTapEventPlugin","dom","document","getElementById","render","MuiThemeProvider_default","muiTheme","getMuiTheme","darkBaseTheme","AppBar_default","title","VideoComponent_VideoComponent"],"mappings":"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","file":"static/js/main.82755463.chunk.js","sourcesContent":["//app/VideoComponent.js\nimport React, { Component } from 'react';\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport { Card, CardHeader, CardText } from 'material-ui/Card';\n\nexport default class VideoComponent extends Component {\n constructor(props) {\n   super();\n   this.state = {\n      identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */\n      roomName: '',    /* Will store the room name */\n      roomNameErr: false,  /* Track error for room name TextField. This will    enable us to show an error message when this variable is true */\n      previewTracks: null,\n      localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */\n      hasJoinedRoom: false,\n      activeRoom: null // Track the current active room\n   };\n\n   this.joinRoom = this.joinRoom.bind(this);\n   this.handleRoomNameChange = this.handleRoomNameChange.bind(this);\n   this.roomJoined = this.roomJoined.bind(this);\n   this.leaveRoom = this.leaveRoom.bind(this);\n   this.detachTracks = this.detachTracks.bind(this);\n   this.detachParticipantTracks =this.detachParticipantTracks.bind(this);\n\n\n }\n\n componentDidMount() {\n\t//   axios.get('/token').then(results => {\n\t//     /*\n\t// Make an API call to get the token and identity(fake name) and  update the corresponding state variables.\n\t//     */\n\t//     const { identity, token } = {\"identity\":\"Ms. Ramon Lakin\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJqdGkiOiJTSzg0OGNkZTAzNDlmYTRlZTc1ZmE0Njk4ZTE4NTUxYTQyLTE1NTA4MDUxMTAiLCJncmFudHMiOnsiaWRlbnRpdHkiOiJNcy4gUmFtb24gTGFraW4iLCJ2aWRlbyI6e319LCJpYXQiOjE1NTA4MDUxMTAsImV4cCI6MTU1MDgwODcxMCwiaXNzIjoiU0s4NDhjZGUwMzQ5ZmE0ZWU3NWZhNDY5OGUxODU1MWE0MiIsInN1YiI6IkFDYWE3ZTNjZmNjNDAzMjdlZGJkM2Q3OWEwY2VkOGJjNzEifQ.SJwQAgUlOjaLrQaqMUsvROpeIdg1bnhEwFN6FjDCzxk\"}\n\t//     this.setState({ identity, token });\n\t//   });\n\n\tconst { identity, token } = {\"identity\":\"Ms. Ramon Lakin\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJqdGkiOiJTSzg0OGNkZTAzNDlmYTRlZTc1ZmE0Njk4ZTE4NTUxYTQyLTE1NTA4MDUxMTAiLCJncmFudHMiOnsiaWRlbnRpdHkiOiJNcy4gUmFtb24gTGFraW4iLCJ2aWRlbyI6e319LCJpYXQiOjE1NTA4MDUxMTAsImV4cCI6MTU1MDgwODcxMCwiaXNzIjoiU0s4NDhjZGUwMzQ5ZmE0ZWU3NWZhNDY5OGUxODU1MWE0MiIsInN1YiI6IkFDYWE3ZTNjZmNjNDAzMjdlZGJkM2Q3OWEwY2VkOGJjNzEifQ.SJwQAgUlOjaLrQaqMUsvROpeIdg1bnhEwFN6FjDCzxk\"}\n\tthis.setState({ identity, token });\n\n\t}\n\n\n\thandleRoomNameChange(e) {\n  /* Fetch room name from text field and update state */\n      let roomName = e.target.value; \n      this.setState({ roomName });\n    }\n\n    joinRoom() {\n   /* \n\tShow an error message on room name text field if user tries         joining a room without providing a room name. This is enabled by setting `roomNameErr` to true\n\t  */\n        if (!this.state.roomName.trim()) {\n            this.setState({ roomNameErr: true });\n            return;\n        }\n\n        console.log(\"Joining room '\" + this.state.roomName + \"'...\");\n        let connectOptions = {\n            name: this.state.roomName\n        };\n\n        if (this.state.previewTracks) {\n            connectOptions.tracks = this.state.previewTracks;\n        }\n\n        /* \n\t\tConnect to a room by providing the token and connection    options that include the room name and tracks. We also show an alert if an error occurs while connecting to the room.    \n\t\t*/  \n\t\tVideo.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n\t\t  alert('Could not connect to Twilio: ' + error.message);\n\t\t});\n\t}\t\n\n\t// Attach the Tracks to the DOM.\n\tattachTracks(tracks, container) {\n\t  tracks.forEach(track => {\n\t    container.appendChild(track.attach());\n\t  });\n\t}\n\n\t// Attach the Participant's Tracks to the DOM.\n\tattachParticipantTracks(participant, container) {\n\t  var tracks = Array.from(participant.tracks.values());\n\t  this.attachTracks(tracks, container);\n\t}\n\n\tdetachTracks(tracks) {\n\t    tracks.forEach(track => {\n\t      track.detach().forEach(detachedElement => {\n\t        detachedElement.remove();\n\t      });\n\t    });\n\t  }\n\n\tdetachParticipantTracks(participant) {\n\t  var tracks = Array.from(participant.tracks.values());\n\t  this.detachTracks(tracks);\n\t}\n\n\troomJoined(room) {\n\t  // Called when a participant joins a room\n\t  console.log(\"Joined as '\" + this.state.identity + \"'\");\n\t  this.setState({\n\t    activeRoom: room,\n\t    localMediaAvailable: true,\n\t    hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’\n\t  });\n\n\t  // Attach LocalParticipant's tracks to the DOM, if not already attached.\n\t  var previewContainer = this.refs.localMedia;\n\t  if (!previewContainer.querySelector('video')) {\n\t    this.attachParticipantTracks(room.localParticipant, previewContainer);\n\t  }\n\n\t  // Attach the Tracks of the room's participants.\n    room.participants.forEach(participant => {\n      console.log(\"Already in Room: '\" + participant.identity + \"'\");\n      var previewContainer = this.refs.remoteMedia;\n      this.attachParticipantTracks(participant, previewContainer);\n    });\n\n    // Participant joining room\n    room.on('participantConnected', participant => {\n      console.log(\"Joining: '\" + participant.identity + \"'\");\n    });\n\n    // Attach participant’s tracks to DOM when they add a track\n    room.on('trackAdded', (track, participant) => {\n      console.log(participant.identity + ' added track: ' + track.kind);\n      var previewContainer = this.refs.remoteMedia;\n      this.attachTracks([track], previewContainer);\n    });\n\n    // Detach participant’s track from DOM when they remove a track.\n    room.on('trackRemoved', (track, participant) => {\n      this.log(participant.identity + ' removed track: ' + track.kind);\n      this.detachTracks([track]);\n    });\n\n    // Detach all participant’s track when they leave a room.\n    room.on('participantDisconnected', participant => {\n      console.log(\"Participant '\" + participant.identity + \"' left the room\");\n      this.detachParticipantTracks(participant);\n    });\n\n    // Once the local participant leaves the room, detach the Tracks\n    // of all other participants, including that of the LocalParticipant.\n    room.on('disconnected', () => {\n      if (this.state.previewTracks) {\n        this.state.previewTracks.forEach(track => {\n          track.stop();\n        });\n      }\n      this.detachParticipantTracks(room.localParticipant);\n      room.participants.forEach(this.detachParticipantTracks);\n      this.state.activeRoom = null;\n      this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n    });  \n\t    // ... more event listeners\n\t}\n\tleaveRoom() {\n   \t\tthis.state.activeRoom.disconnect();\n   \t\tthis.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n\t}\n\n\trender() {\n\t  /* \n\t   Controls showing of the local track\n\t   Only show video track after user has joined a room else show nothing \n\t  */\n\t  let showLocalTrack = this.state.localMediaAvailable ? (\n\t    <div className=\"flex-item\"><div ref=\"localMedia\" /> </div>) : '';   \n\t  /*\n\t   Controls showing of ‘Join Room’ or ‘Leave Room’ button.  \n\t   Hide 'Join Room' button if user has already joined a room otherwise \n\t   show `Leave Room` button.\n\t  */\n\t  let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\n\t  <RaisedButton label=\"Leave Room\" secondary={true} onClick={this.leaveRoom}  />) : (\n\t  <RaisedButton label=\"Join Room\" primary={true} onClick={this.joinRoom} />);\n\t  return (\n\t    <Card>\n\t    <CardText>\n\t      <div className=\"flex-container\">\n\t    {showLocalTrack} {/* Show local track if available */}\n\t    <div className=\"flex-item\">\n\t    {/* \n\tThe following text field is used to enter a room name. It calls  `handleRoomNameChange` method when the text changes which sets the `roomName` variable initialized in the state.\n\t    */}\n\t    <TextField hintText=\"Room Name\" onChange={this.handleRoomNameChange} \n\terrorText = {this.state.roomNameErr ? 'Room Name is required' : undefined} \n\t     /><br />\n\t    {joinOrLeaveRoomButton}  {/* Show either ‘Leave Room’ or ‘Join Room’ button */}\n\t     </div>\n\t    {/* \n\tThe following div element shows all remote media (other                             participant’s tracks) \n\t    */}\n\t    <div className=\"flex-item\" ref=\"remoteMedia\" id=\"remote-media\" />\n\t  </div>\n\t</CardText>\n\t    </Card>\n\t  );\n\t}\n}","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React, { Component } from \"react\";\nimport AppBar from 'material-ui/AppBar';\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport VideoComponent from './VideoComponent';\nimport injectTapEventPlugin from \"react-tap-event-plugin\";\ninjectTapEventPlugin();\n\nlet dom = document.getElementById(\"app\");\nrender(\n    <MuiThemeProvider muiTheme={getMuiTheme(darkBaseTheme)}>\n            <div>\n            <AppBar title=\"React Twilio Video\" />\n            <VideoComponent />\n            </div>\n    </MuiThemeProvider>\n    ,\n    dom\n);"],"sourceRoot":""}